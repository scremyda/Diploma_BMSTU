services:
#  scanner:
#    build:
#      context: ..
#      dockerfile: ./build/scanner/Dockerfile
#      network: host
#    depends_on:
#      - alerter
#    command: [ "/app/scanner", "-c", "/app/config.yaml" ]
#    volumes:
#      - ../scanner/cmd/config.yaml:/app/config.yaml
#
#  alerter:
#    build:
#      context: ..
#      dockerfile: ./build/alerter/Dockerfile
#      network: host
#    depends_on:
#      - postgres
#    command: [ "/app/alerter", "-c", "/app/config.yaml" ]
#    volumes:
#      - ../alerter/cmd/config.yaml:/app/config.yaml
#    restart: always

  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
      # network: host
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: pgqdb
    ports:
      - "5432:5432"
    volumes:
#      - pgdata:/var/lib/postgresql/14/data
      - ../init/init_pgq.sql:/docker-entrypoint-initdb.d/init_pgq.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

#volumes:
#  pgdata:
